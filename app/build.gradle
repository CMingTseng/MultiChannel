apply plugin: 'com.android.application'

//1、直接使用Git提交次数来定义VersionCode
//def cmd_code = 'git rev-list HEAD --first-parent --count'
//def gitVersionCode = cmd_code.execute().text.trim().toInteger()

//2、使用日期和Git提交次数来定义VersionCode和VersionName
ext.majorCode = 1       //主版本号，手动修改
ext.minorCode = 0       //次版本号，手动修改
ext.revisionCode = 1    //修订版本号，手动修改
//ext.revisionDescriptionCMD = 'git describe --always'
//ext.tempRevisionDescription = revisionDescriptionCMD.execute().getText().trim()
//ext.revisionDescription = (tempRevisionDescription == null || (tempRevisionDescription).size() == 0) ? new Date().format("yyMMddhhss") : (tempRevisionDescription).substring((tempRevisionDescription).size() - 6)

ext.compileCodeCMD = 'git rev-list HEAD --count'
ext.compileCode = compileCodeCMD.execute().getText().trim().toInteger()//编译版本号，自动修改，按照Git提交次数生成

android {
    // 编译SDK的版本
    compileSdkVersion 25

    // buildTools版本
    buildToolsVersion "25.0.2"

    // 默认的配置
    defaultConfig {
        // 应用的包名
        applicationId "com.cooloongwu.multichannel"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode getVersionCode(false)
        versionName getMyVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    //多渠道签名配置
    signingConfigs {

        defaltConfig {
            keyAlias 'multichannel'//别名
            keyPassword 'multichannel'//别名密码
            storeFile file('../key/multichannel.jks')//签名文件路径
            storePassword 'multichannel'//签名密码
        }

    }

    buildTypes {

        debug {
            // 是否进行代码混淆
            minifyEnabled false

            // 设置是否删除无用的资源，如果使用同一个签名打包设置为true会造成一个问题，如下所示，如果出错将其注释即可（暂时先逃避问题，不知道怎么解决）！
            //Error:A problem was found with the configuration of task ':app:packageColdRelease'. > File 'D:\Works_Android\MultiChannel\app\build\intermediates\res\resources-her-release-stripped.ap_' specified for property 'resourceFile' does not exist.
            shrinkResources false

            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.defaltConfig
        }

        release {
            // 是否进行代码混淆
            minifyEnabled false

            // 设置是否删除无用的资源，如果使用同一个签名打包设置为true会造成一个问题，如下所示，如果出错将其注释即可（暂时先逃避问题，不知道怎么解决）！
            //Error:A problem was found with the configuration of task ':app:packageColdRelease'. > File 'D:\Works_Android\MultiChannel\app\build\intermediates\res\resources-her-release-stripped.ap_' specified for property 'resourceFile' does not exist.
            shrinkResources false

            // 混淆文件的位置
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.defaltConfig
        }
    }

    //多渠道打包配置，signingConfig可配置不同签名，在AndroidManifest.xml的application标签中配置meta-data即可，如下所示：
    //<meta-data
    //android:name="CHANNEL"
    //android:value="${CHANNEL_VALUE}" />

    productFlavors {
        day {
            applicationId = "com.cooloongwu.multichannel.day"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "day",
                    APPLICATIONID: applicationId
            ]
            //signingConfig signingConfigs.day

            //应用名
            resValue "string", "app_name", "天气：白天"

            buildConfigField "String", "WEXIN_APPID", "\"wx79adc1da7114f9cb\""
            buildConfigField "String", "WEIXIN_APPSECRET", "\"65c13c1b7b896f206f40fa3a22ae2569\""
        }

        night {
            applicationId = "com.cooloongwu.multichannel.night"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "night",
                    APPLICATIONID: applicationId
            ]
            //signingConfig signingConfigs.night

            //应用名
            resValue "string", "app_name", "天气：夜晚"

            buildConfigField "String", "WEXIN_APPID", "\"wx81646ad561479f94\""
            buildConfigField "String", "WEIXIN_APPSECRET", "\"b0f1479bee648c0db3b63e8b069af46a\""
        }

        cold {
            applicationId = "com.cooloongwu.multichannel.cold"
            manifestPlaceholders = [
                    CHANNEL_VALUE: "cold",
                    APPLICATIONID: applicationId
            ]
            //signingConfig signingConfigs.cold

            //应用名
            resValue "string", "app_name", " 天气：寒冷"

            buildConfigField "String", "WEXIN_APPID", "\"wx3aac6fa0cc2575d1\""
            buildConfigField "String", "WEIXIN_APPSECRET", "\"e0667cc8caecaf231ddc3f3aebdf69d4\""
        }
    }

    //自定义打包发布apk名字的格式：xxx_multichannel_1.2.1.apk
    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.mergedFlavor.versionCode = getVersionCode(true)
        } else {
            variant.mergedFlavor.versionCode = getVersionCode(false)
        }
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (variant.buildType.name == 'release') {
                def fileName = "${variant.productFlavors[0].name}_multichannel_${defaultConfig.versionName}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

}

def getVersionCode(boolean isRelease) {
    // 正式环境
    if (isRelease) {
        majorCode * 1000000 + minorCode * 10000 + revisionCode + compileCode
    }
    // debug环境
    else {
        //直接返回一个日期
        Integer.parseInt(new Date().format("yyMMddhhss"))
    }
}

def getMyVersionName() {
    majorCode + "." + minorCode + "." + revisionCode + "." + compileCode
}

// 依赖项目
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    compile 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:1.1.6'
    compile 'com.loopj.android:android-async-http:1.4.9'
}
